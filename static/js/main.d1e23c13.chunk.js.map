{"version":3,"sources":["actions/actionCreators.js","actions/actionTypes.js","components/ServiceAdd.js","components/ServiceList.js","App.js","reducers/serviceListReducer.js","reducers/serviceAddReducer.js","store/index.js","index.js"],"names":["addService","id","name","price","type","payload","removeService","ServiceAdd","item","useSelector","state","serviceAdd","dispatch","useDispatch","handleChange","evt","target","value","fieldName","changeServiceField","onSubmit","preventDefault","onReset","onChange","ServiceList","items","serviceList","itemsActive","map","o","key","className","onClick","changeService","App","initialState","nanoid","reducer","combineReducers","action","addItem","service","Number","filter","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d1e23c13.chunk.js","sourcesContent":["import { ADD_SERVICE, REMOVE_SERVICE, CHANGE_SERVICE_FIELD, CHANGE_SERVICE, CHANGE_SERVICE_CANCEL } from './actionTypes';\n\nexport function addService(id, name, price) {\n  return {type: ADD_SERVICE, payload: {id, name, price}};\n}\n\nexport function removeService(id) {\n  return {type: REMOVE_SERVICE, payload: {id}};\n}\n\nexport function changeServiceField(fieldName, value) {\n  return {type: CHANGE_SERVICE_FIELD, payload: {fieldName, value}}\n}\n\nexport function changeService(id, name, price) {\n  return {type: CHANGE_SERVICE, payload: {id, name, price}};\n}\n\nexport function changeServiceCancel() {\n  return {type: CHANGE_SERVICE_CANCEL};\n}\n","export const ADD_SERVICE = 'ADD_SERVICE';\nexport const REMOVE_SERVICE = 'REMOVE_SERVICE';\nexport const CHANGE_SERVICE_FIELD = 'CHANGE_SERVICE_FIELD';\nexport const CHANGE_SERVICE = 'CHANGE_SERVICE';\nexport const CHANGE_SERVICE_CANCEL = 'CHANGE_SERVICE_CANCEL';\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeServiceField, addService, changeServiceCancel } from '../actions/actionCreators';\n\nfunction ServiceAdd() {\n\tconst item = useSelector(state => state.serviceAdd);\n\tconst dispatch = useDispatch();\n\n\tconst handleChange = evt => {\n\t\tconst {name, value} = evt.target;\n\t\tdispatch(changeServiceField(name, value));\n\t}\n\n\tconst handleSubmit = evt => {\n\t\tevt.preventDefault();\n\t\tif (item.id) {\n      dispatch(addService(item.id, item.name, item.price))\n    } else {\n      dispatch(addService('', item.name, item.price))\n    }\n\t}\n\n  const handleReset = evt => {\n    dispatch(changeServiceCancel());\n  }\n\n\treturn (\n\t\t<form onSubmit={handleSubmit} onReset={handleReset}>\n\t\t\t<input name='name' onChange={handleChange} value={item.name} />\n\t\t\t<input name='price' onChange={handleChange} value={item.price} />\n\t\t\t<button type='submit'>Save</button>\n      {item.id && <button type='reset'>Cancel</button>}\n\t\t</form>\n\t);\n}\n\nexport default ServiceAdd;\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { removeService, changeService, changeServiceCancel } from '../actions/actionCreators';\n\nfunction ServiceList() {\n  const items = useSelector(state => state.serviceList);\n  const itemsActive = useSelector(state => state.serviceAdd);\n  const dispatch = useDispatch();\n\n  const handleRemove = id => {\n    if (itemsActive.id !== id) {\n      dispatch(removeService(id));\n    } else {\n      dispatch(changeServiceCancel());\n      dispatch(removeService(id));\n    }\n  }\n\n  const handleChange = (o) => {\n    const { id, name, price } = o;\n    dispatch(changeService(id, name, price));\n  };\n\n  return (\n    <ul>\n      {items.map(o => (\n        <li key={o.id}>\n          {o.name} {o.price}\n          <button className=\"button\" onClick={() => handleChange(o)}>&#9999;</button>\n          <button className=\"button\" onClick={() => handleRemove(o.id)}>X</button> \n        </li>\n      ))}\n    </ul>\n  )\n}\n\nexport default ServiceList;\n","import React from 'react';\nimport './App.css';\nimport ServiceAdd from './components/ServiceAdd';\nimport ServiceList from './components/ServiceList';\n\nfunction App() {\n  return (\n    <>\n      <ServiceAdd />\n      <ServiceList />\n    </>\n  );\n}\n\nexport default App;\n","import { nanoid } from 'nanoid';\nimport { ADD_SERVICE, REMOVE_SERVICE } from '../actions/actionTypes';\n\nconst initialState = [\n  {id: nanoid(), name: 'Замена стекла', price: 21000},\n  {id: nanoid(), name: 'Замена дисплея', price: 25000},\n];\n\nexport default function serviceListReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_SERVICE:\n      const addItem = action.payload;\n\n      if (addItem.id) {\n        return state.map((service) => {\n          if (service.id === addItem.id) {\n            return {\n              id: addItem.id,\n              name: addItem.name,\n              price: addItem.price,\n            }\n          }\n          return service;\n        });\n      }\n      return [...state, {id: nanoid(), name: addItem.name, price: Number(addItem.price)}];\n\n    case REMOVE_SERVICE:\n      const {id} = action.payload;\n      return state.filter(service => service.id !== id);\n\n    default:\n      return state;\n  }\n}\n","import { CHANGE_SERVICE_FIELD, ADD_SERVICE, CHANGE_SERVICE, CHANGE_SERVICE_CANCEL } from '../actions/actionTypes';\n\nconst initialState = {\n  id: '',\n  name: '',\n  price: '',\n};\n\nexport default function serviceAddReducer(state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_SERVICE_FIELD:\n      const {fieldName, value} = action.payload;\n      return {...state, [fieldName]: value};\n\n    case CHANGE_SERVICE:\n      const {id, name, price} = action.payload;\n      return {id, name, price};\n\n    case ADD_SERVICE:\n      return {...initialState};\n\n    case CHANGE_SERVICE_CANCEL:\n      return {...initialState};\n\n    default:\n      return state;\n  }\n}\n","import { createStore, combineReducers } from 'redux';\nimport serviceListReducer from '../reducers/serviceListReducer';\nimport serviceAddReducer from '../reducers/serviceAddReducer';\n\nconst reducer = combineReducers({\n  serviceList: serviceListReducer,\n  serviceAdd: serviceAddReducer,\n});\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}